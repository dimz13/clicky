{"version":3,"sources":["components/Wrapper/index.js","components/FriendCard/index.js","components/Score/index.js","components/Hero/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","FriendCard","alt","name","src","image","id","onClick","shuffleScoreCard","Score","total","status","Hero","style","backgroundImage","App","state","friends","clickedFriendIds","score","goal","includes","setState","push","length","console","log","i","j","Math","floor","random","this","map","friendy","key","Component","ReactDOM","render","document","getElementById"],"mappings":"spCAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAME,W,MCW1BC,MAZf,SAAoBH,GAClB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKG,IAAKJ,EAAMK,KAAMC,IAAKN,EAAMO,MAAOC,GAAIR,EAAMQ,GAChDC,QAAS,kBAAIT,EAAMU,iBAAiBV,EAAMQ,KAAKP,UAAU,oB,OCIpDU,G,MAPD,SAAAX,GAAK,OACjB,yBAAKC,UAAU,aACb,wBAAIA,UAAU,SAAd,eAAmCD,EAAMY,OACzC,wBAAIX,UAAU,UAAUD,EAAMa,W,MCGnBC,MARf,SAAcd,GACZ,OACE,yBAAKC,UAAU,mBAAmBc,MAAO,CAAEC,gBAAgB,OAAD,OAAShB,EAAMgB,gBAAf,OACvDhB,EAAME,WCuEEe,E,2MAlEbC,MAAQ,CACNC,UACAC,iBAAkB,GAClBC,MAAO,EACPC,KAAM,GACNT,OAAQ,I,EAIVH,iBAAmB,SAAAF,GACjB,IAAIY,EAAmB,EAAKF,MAAME,iBAElC,GAAGA,EAAiBG,SAASf,GAC3B,EAAKgB,SAAS,CAAEJ,iBAAkB,GAAIC,MAAO,EAAGR,OAAS,qEAD3D,CAME,GAFAO,EAAiBK,KAAKjB,GAES,KAA5BY,EAAiBM,OAGlB,OAFA,EAAKF,SAAS,CAACH,MAAO,GAAIR,OAAQ,qDAAsDO,iBAAkB,UAC1GO,QAAQC,IAAI,WAId,EAAKJ,SAAS,CAAEL,UAASC,mBAAkBC,MAAOD,EAAiBM,OAAQb,OAAQ,MAEnF,IAAK,IAAIgB,EAAIV,EAAQO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC3C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADG,EAEhB,CAACV,EAAQW,GAAIX,EAAQU,IAA/CV,EAAQU,GAFkC,KAE9BV,EAAQW,GAFsB,Q,wEAQvC,IAAD,OACP,OACE,yBAAK7B,UAAU,OACZ,4BAAQA,UAAU,cACnB,kBAAC,EAAD,CAAMe,gBAAgB,8BACtB,wBAAIf,UAAU,aAAd,eACA,wBAAIA,UAAU,aAAd,qEAKA,kBAAC,EAAD,CAAOW,MAAOsB,KAAKhB,MAAMG,MAClBC,KAAM,GACNT,OAAQqB,KAAKhB,MAAML,SAE1B,kBAAC,EAAD,KAEGqB,KAAKhB,MAAMC,QAAQgB,KAAI,SAAAC,GAAO,OAC7B,kBAAC,EAAD,CACE1B,iBAAkB,EAAKA,iBACvBF,GAAI4B,EAAQ5B,GACZ6B,IAAKD,EAAQ5B,GACbD,MAAO6B,EAAQ7B,iB,GA1DX+B,a,MCJlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.93f546cb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} id={props.id}\n          onClick={()=>props.shuffleScoreCard(props.id)} className=\"shuffleScore\"\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\n\n\nconst Score = props => (\n  <div className=\"gameScore\">\n    <h3 className=\"score\">Your Score  {props.total}</h3>\n    <h3 className=\"status\">{props.status}</h3>\n  </div>\n);\n\nexport default Score;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${props.backgroundImage})` }}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React,{ Component} from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport FriendCard from \"./components/FriendCard\";\nimport friends from \"./friends.json\";\nimport Score from \"./components/Score\";\nimport Hero from \"./components/Hero\";\n\n\n\nclass App extends Component {\n  // Setting the state for the cards json array\n  state = {\n    friends,\n    clickedFriendIds: [],\n    score: 0,\n    goal: 12,\n    status: \"\"\n  };\n\n  //shuffle the cards randomly in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedFriendIds = this.state.clickedFriendIds;\n\n    if(clickedFriendIds.includes(id)){\n      this.setState({ clickedFriendIds: [], score: 0, status:  \"Oops you clicked the same image twice!! Click to play again!\" });\n      return;\n    }else{\n      clickedFriendIds.push(id)\n\n      if(clickedFriendIds.length === 12){\n        this.setState({score: 12, status: \"You have an awesome memory!!! Click to play again!\", clickedFriendIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ friends, clickedFriendIds, score: clickedFriendIds.length, status: \" \" });\n\n      for (let i = friends.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [friends[i], friends[j]] = [friends[j], friends[i]];\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n         <header className=\"App-header\">\n        <Hero backgroundImage=\"../images/starry-skies.jpg\">\n        <h1 className=\"App-title\" >Memory Game</h1>\n        <h2 className=\"App-intro\">\n            Click an image to score a point. Click it twice and you loose!!\n          </h2>\n      </Hero>\n        </header>\n        <Score total={this.state.score}\n               goal={12}\n               status={this.state.status}\n               />\n        <Wrapper>\n\n          {this.state.friends.map(friendy => (\n            <FriendCard\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={friendy.id}\n              key={friendy.id}\n              image={friendy.image}\n            />\n          ))}\n        </Wrapper>\n        \n    </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}